// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/article": {
            "get": {
                "description": "文章列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "文章"
                ],
                "summary": "文章",
                "parameters": [
                    {
                        "type": "string",
                        "name": "content",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回",
                        "schema": {
                            "$ref": "#/definitions/global.Response"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/global.Response"
                        }
                    },
                    "500": {
                        "description": "系统错误",
                        "schema": {
                            "$ref": "#/definitions/global.Response"
                        }
                    }
                }
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/article/:id": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/cache": {
            "get": {
                "responses": {}
            },
            "post": {
                "responses": {}
            },
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "用户登录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "登录"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validate.LoginValidate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回",
                        "schema": {
                            "$ref": "#/definitions/global.Response"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/global.Response"
                        }
                    },
                    "500": {
                        "description": "系统错误",
                        "schema": {
                            "$ref": "#/definitions/global.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/send": {
            "post": {
                "responses": {}
            }
        },
        "/api/v1/user": {
            "get": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/user/:id": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            }
        },
        "/v1/user/:id": {
            "delete": {
                "responses": {}
            }
        }
    },
    "definitions": {
        "global.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "validate.LoginValidate": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
