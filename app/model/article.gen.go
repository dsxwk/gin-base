// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"gorm.io/gorm"
	"time"
)

const TableNameArticle = "article"

// Article mapped from table <article>
type Article struct {
	ID         int64     `gorm:"column:id;type:int(10) unsigned;primaryKey;autoIncrement:true;comment:ID" json:"id"` // ID
	UID        int64     `gorm:"column:uid;type:int(11);not null;comment:用户id" json:"uid"`                           // 用户id
	User       *User     `json:"user" gorm:"foreignkey:uid;references:id"`                                           // 关联用户
	Title      string    `gorm:"column:title;type:varchar(50);not null;comment:标题" json:"title"`                     // 标题
	Content    string    `gorm:"column:content;type:varchar(255);not null;comment:内容" json:"content"`                // 内容
	CategoryID int64     `gorm:"column:category_id;type:int(11);not null;comment:分类id" json:"category_id"`           // 分类id
	Category   *Category `json:"category" gorm:"foreignkey:category_id;references:id"`                               // 关联分类
	CreatedAt  *string   `gorm:"column:created_at;type:datetime;comment:创建时间" json:"created_at"`                     // 创建时间
	UpdatedAt  *string   `gorm:"column:updated_at;type:datetime;comment:更新时间" json:"updated_at"`                     // 更新时间
	DeletedAt  *string   `gorm:"column:deleted_at;type:datetime;comment:删除时间" json:"deleted_at"`                     // 删除时间
}

// TableName Article's table name
func (*Article) TableName() string {
	return TableNameArticle
}

// 创建之前
func (s *Article) BeforeCreate(tx *gorm.DB) (err error) {
	if s.CreatedAt == nil {
		createdAt := time.Now().Format("2006-01-02 15:04:05")
		s.CreatedAt = &createdAt
	}

	if s.UpdatedAt == nil {
		updatedAt := time.Now().Format("2006-01-02 15:04:05")
		s.UpdatedAt = &updatedAt
	}

	return
}

// 更新之前
func (s *Article) BeforeUpdate(tx *gorm.DB) (err error) {
	if s.UpdatedAt == nil {
		updatedAt := time.Now().Format("2006-01-02 15:04:05")
		s.UpdatedAt = &updatedAt
	}

	return
}

// 查询之后
func (s *Article) AfterFind(tx *gorm.DB) (err error) {
	if s.CreatedAt != nil {
		createdAt := time.Now().Format("2006-01-02 15:04:05")
		s.CreatedAt = &createdAt
	}

	if s.UpdatedAt != nil {
		updatedAt := time.Now().Format("2006-01-02 15:04:05")
		s.UpdatedAt = &updatedAt
	}

	if s.DeletedAt != nil {
		deletedAt := time.Now().Format("2006-01-02 15:04:05")
		s.DeletedAt = &deletedAt
	}

	return
}

// 删除之前
func (s *Article) BeforeDelete(tx *gorm.DB) (err error) {
	if s.DeletedAt == nil {
		deletedAt := time.Now().Format("2006-01-02 15:04:05")
		s.DeletedAt = &deletedAt
	}

	return
}
