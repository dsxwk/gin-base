// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"gorm.io/gorm"
	"time"
)

const TableNameRoles = "roles"

// Roles 角色表
type Roles struct {
	ID        int64           `gorm:"column:id;type:int(10) unsigned;primaryKey;autoIncrement:true;comment:ID" json:"id"`           // ID
	Name      string          `gorm:"column:name;type:varchar(20);not null;comment:角色名称" json:"name"`                               // 角色名称
	Desc      string          `gorm:"column:desc;type:varchar(100);not null;comment:角色描述" json:"desc"`                              // 角色描述
	Status    int64           `gorm:"column:status;type:tinyint(1) unsigned;not null;default:1;comment:状态 1=启用 2=停用" json:"status"` // 状态 1=启用 2=停用
	CreatedAt *JsonTime       `gorm:"column:created_at;type:datetime;comment:创建时间" json:"createdAt"`                                // 创建时间
	UpdatedAt *JsonTime       `gorm:"column:updated_at;type:datetime;comment:更新时间" json:"updatedAt"`                                // 更新时间
	DeletedAt *gorm.DeletedAt `gorm:"column:deleted_at;type:datetime;comment:删除时间" json:"deletedAt"`                                // 删除时间
}

// TableName Roles's table name
func (*Roles) TableName() string {
	return TableNameRoles
}

// BeforeCreate 创建之前
func (s *Roles) BeforeCreate(tx *gorm.DB) (err error) {
	now := JsonTime(time.Now())
	s.CreatedAt = &now
	s.UpdatedAt = &now
	return nil
}

// BeforeUpdate 更新之前
func (s *Roles) BeforeUpdate(tx *gorm.DB) (err error) {
	now := JsonTime(time.Now())
	s.UpdatedAt = &now
	return nil
}
