// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"gorm.io/gorm"
	"time"
)

const TableNameUserRoles = "user_roles"

// UserRoles 用户角色表
type UserRoles struct {
	ID        int64           `gorm:"column:id;type:int(10) unsigned;primaryKey;autoIncrement:true;comment:ID" json:"id"` // ID
	UserID    int64           `gorm:"column:user_id;type:int(10) unsigned;not null;comment:用户id" json:"userId"`           // 用户id
	RoleID    int64           `gorm:"column:role_id;type:int(10) unsigned;not null;comment:角色id" json:"roleId"`           // 角色id
	Name      string          `gorm:"column:name;type:varchar(20);not null;comment:角色名称" json:"name"`                     // 角色名称
	CreatedAt *JsonTime       `gorm:"column:created_at;type:datetime;comment:创建时间" json:"createdAt"`                      // 创建时间
	UpdatedAt *JsonTime       `gorm:"column:updated_at;type:datetime;comment:更新时间" json:"updatedAt"`                      // 更新时间
	DeletedAt *gorm.DeletedAt `gorm:"column:deleted_at;type:datetime;comment:删除时间" json:"deletedAt"`                      // 删除时间
}

// TableName UserRoles's table name
func (*UserRoles) TableName() string {
	return TableNameUserRoles
}

// BeforeCreate 创建之前
func (s *UserRoles) BeforeCreate(tx *gorm.DB) (err error) {
	now := JsonTime(time.Now())
	s.CreatedAt = &now
	s.UpdatedAt = &now
	return nil
}

// BeforeUpdate 更新之前
func (s *UserRoles) BeforeUpdate(tx *gorm.DB) (err error) {
	now := JsonTime(time.Now())
	s.UpdatedAt = &now
	return nil
}
